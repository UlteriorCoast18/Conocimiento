name: residualBinaryNumbers
init: qMoveCenterStart
accept: qEndResidual

//EL programa primero se mueve al centro, luego copia a la izquierda y la derecha las cadenas

//MODULO MOVER CENTRO

qMoveCenterStart,_
qMoveCenterStart,_,>

qMoveCenterStart,0
qMoveCenterStartDetect,0,>

qMoveCenterStart,1
qMoveCenterStartDetect,1,>

qMoveCenterStart,*
qMoveCenterStartDetect,*,>

qMoveCenterStartDetect,0
qMoveCenterStartDetect,0,>

qMoveCenterStartDetect,1
qMoveCenterStartDetect,1,>

qMoveCenterStartDetect,*
qMoveCenterStartDetect,*,>

qMoveCenterStartDetect,_
qCopyRInital,_,-

//MODULO COPIAR CADENA DERECHA DERECHA

//recorre cadena hasta encontrar el final de la cadena (espacio es el final)

qCopyRInital,_
qCopyRInital,_,>

qCopyRInital,0
qCopyRInitalPut*Start,0,>

qCopyRInital,1
qCopyRInitalPut*Start,1,>

qCopyRInitalPut*Start,0
qCopyRInitalPut*Start,0,>

qCopyRInitalPut*Start,1
qCopyRInitalPut*Start,1,>

qCopyRInitalPut*Start,_
qCopyRStart,*,<

qCopyRStart,*
qCopyRHearing,*,<

qCopyRStart,0
qCopyRHearing,0,<

qCopyRStart,1
qCopyRHearing,1,<

qCopyRStart,2
qCopyRHearing,2,<

qCopyRStart,3
qCopyRHearing,3,<

qCopyRHearing,*
qCopyRHearing,*,<

qCopyRHearing,0
qCopyRHearing,0,<

qCopyRHearing,1
qCopyRHearing,1,<

qCopyRHearing,2
qCopyRHearing,2,<

qCopyRHearing,3
qCopyRHearing,3,<

qCopyRHearing,_
qCopyRStartDetect,_,>

//detecto un cero

qCopyRStartDetect,0
qCopyRDetected0,2,>

//mueve el cero

qCopyRDetected0,0
qCopyRDetected0,0,>

qCopyRDetected0,1
qCopyRDetected0,1,>

qCopyRDetected0,*
qCopyRPut0,*,>

qCopyRPut0,0
qCopyRPut0,0,>

qCopyRPut0,1
qCopyRPut0,1,>

qCopyRPut0,_
qCopyRStart,0,<

//detecto un uno

qCopyRStartDetect,1
qCopyRDetected1,3,>

//mueve el uno

qCopyRDetected1,0
qCopyRDetected1,0,>

qCopyRDetected1,1
qCopyRDetected1,1,>

qCopyRDetected1,*
qCopyRPut1,*,>

qCopyRPut1,0
qCopyRPut1,0,>

qCopyRPut1,1
qCopyRPut1,1,>

qCopyRPut1,_
qCopyRStart,1,<

//si detecto un 2 o 3, solo se mueve

qCopyRStartDetect,2
qCopyRStartDetect,2,>

qCopyRStartDetect,3
qCopyRStartDetect,3,>

//si detecto el vacio es pq ya termino

qCopyRStartDetect,*
qCopyRStartChange,*,<

qCopyRStartChange,2
qCopyRStartChange,0,<

qCopyRStartChange,3
qCopyRStartChange,1,<

qCopyRStartChange,_
qCopyPrepareLeftCopy,_,<

qCopyPrepareLeftCopy,0
qCopyPrepareLeftCopy,0,<

qCopyPrepareLeftCopy,1
qCopyPrepareLeftCopy,1,<

qCopyPrepareLeftCopy,_
qCopyLInital,_,-

//MODULO COPIAR CADENA IZQUIERDA IZQUIERDA

//recorre cadena hasta encontrar el final de la cadena (espacio es el final)

qCopyLInital,_
qCopyLInital,_,>

qCopyLInital,0
qCopyLInitialPut*,0,<

qCopyLInital,1
qCopyLInitialPut*,1,<

qCopyLInitialPut*,_
qCopyLStart,*,>

qCopyLStart,*
qCopyLHearing,*,>

qCopyLStart,0
qCopyLHearing,0,>

qCopyLStart,1
qCopyLHearing,1,>

qCopyLStart,2
qCopyLHearing,2,>

qCopyLStart,3
qCopyLHearing,3,>

qCopyLHearing,*
qCopyLHearing,*,>

qCopyLHearing,0
qCopyLHearing,0,>

qCopyLHearing,1
qCopyLHearing,1,>

qCopyLHearing,2
qCopyLHearing,2,>

qCopyLHearing,3
qCopyLHearing,3,>

qCopyLHearing,_
qCopyLStartDetect,_,<

//detecto un cero

qCopyLStartDetect,0
qCopyLDetected0,2,<

//mueve el cero

qCopyLDetected0,0
qCopyLDetected0,0,<

qCopyLDetected0,1
qCopyLDetected0,1,<

qCopyLDetected0,*
qCopyLPut0,*,<

qCopyLPut0,0
qCopyLPut0,0,<

qCopyLPut0,1
qCopyLPut0,1,<

qCopyLPut0,_
qCopyLStart,0,>

//detecto un uno

qCopyLStartDetect,1
qCopyLDetected1,3,<

//mueve el uno

qCopyLDetected1,0
qCopyLDetected1,0,<

qCopyLDetected1,1
qCopyLDetected1,1,<

qCopyLDetected1,*
qCopyLPut1,*,<

qCopyLPut1,0
qCopyLPut1,0,<

qCopyLPut1,1
qCopyLPut1,1,<

qCopyLPut1,_
qCopyLStart,1,>

//si detecto un 2 o 3, solo se mueve

qCopyLStartDetect,2
qCopyLStartDetect,2,<

qCopyLStartDetect,3
qCopyLStartDetect,3,<

//si detecto el vacio es pq ya termino

qCopyLStartDetect,*
qCopyLStartChange,*,>

qCopyLStartChange,2
qCopyLStartChange,0,>

qCopyLStartChange,3
qCopyLStartChange,1,>

qCopyLStartChange,_
qStartRest,_,-

//MODULO RESTA

//Primero nos vamos al final de la cadena de la derecha y le restamos uno, si no se pudo es pq ya acabo el proceso

qStartRest,_
qStartRest,_,>

qStartRest,0
qStartRest,0,>

qStartRest,1
qStartRest,1,>

qStartRest,*
qStartRestRight,*,<

//resta uno al numero de la derecha

qStartRestRight,1
qRestRightEnded,0,<

qStartRestRight,0
qStartRestRight,1,<

//no pudo restar, por lo que debe terminar el proceso

qStartRestRight,_
qEndRest,_,- //AQUI ES QUE TERMINO LA RESTA

//Movimiento a la izquierda para empezar la resta de la izquierda

qRestRightEnded,0
qRestRightEnded,0,<

qRestRightEnded,1
qRestRightEnded,1,<

qRestRightEnded,_
qStartRestLeft,_,<

//Resta de la izquierda

qStartRestLeft,1
qRestLeftEnded,0,>

qStartRestLeft,0
qStartRestLeft,1,<

//ya no pudo restar, por lo que termina el programa general

qStartRestLeft,*
qEndQuotient,*,> //ESTE ES EL FIN

//movimiento a la derecha para regresar al estado inicial

qRestLeftEnded,0
qRestLeftEnded,0,>

qRestLeftEnded,1
qRestLeftEnded,1,>

qRestLeftEnded,_
qStartRest,_,-

//FIN PROGRAMA


